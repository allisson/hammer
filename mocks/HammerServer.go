// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	api "github.com/allisson/hammer/api/v1"

	emptypb "google.golang.org/protobuf/types/known/emptypb"

	mock "github.com/stretchr/testify/mock"
)

// HammerServer is an autogenerated mock type for the HammerServer type
type HammerServer struct {
	mock.Mock
}

// CreateMessage provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) CreateMessage(_a0 context.Context, _a1 *api.CreateMessageRequest) (*api.Message, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Message
	if rf, ok := ret.Get(0).(func(context.Context, *api.CreateMessageRequest) *api.Message); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.CreateMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSubscription provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) CreateSubscription(_a0 context.Context, _a1 *api.CreateSubscriptionRequest) (*api.Subscription, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Subscription
	if rf, ok := ret.Get(0).(func(context.Context, *api.CreateSubscriptionRequest) *api.Subscription); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.CreateSubscriptionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateTopic provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) CreateTopic(_a0 context.Context, _a1 *api.CreateTopicRequest) (*api.Topic, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Topic
	if rf, ok := ret.Get(0).(func(context.Context, *api.CreateTopicRequest) *api.Topic); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Topic)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.CreateTopicRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteMessage provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) DeleteMessage(_a0 context.Context, _a1 *api.DeleteMessageRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *emptypb.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *api.DeleteMessageRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.DeleteMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSubscription provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) DeleteSubscription(_a0 context.Context, _a1 *api.DeleteSubscriptionRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *emptypb.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *api.DeleteSubscriptionRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.DeleteSubscriptionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTopic provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) DeleteTopic(_a0 context.Context, _a1 *api.DeleteTopicRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *emptypb.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *api.DeleteTopicRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.DeleteTopicRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDelivery provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) GetDelivery(_a0 context.Context, _a1 *api.GetDeliveryRequest) (*api.Delivery, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Delivery
	if rf, ok := ret.Get(0).(func(context.Context, *api.GetDeliveryRequest) *api.Delivery); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Delivery)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.GetDeliveryRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryAttempt provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) GetDeliveryAttempt(_a0 context.Context, _a1 *api.GetDeliveryAttemptRequest) (*api.DeliveryAttempt, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.DeliveryAttempt
	if rf, ok := ret.Get(0).(func(context.Context, *api.GetDeliveryAttemptRequest) *api.DeliveryAttempt); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.DeliveryAttempt)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.GetDeliveryAttemptRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessage provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) GetMessage(_a0 context.Context, _a1 *api.GetMessageRequest) (*api.Message, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Message
	if rf, ok := ret.Get(0).(func(context.Context, *api.GetMessageRequest) *api.Message); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.GetMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSubscription provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) GetSubscription(_a0 context.Context, _a1 *api.GetSubscriptionRequest) (*api.Subscription, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Subscription
	if rf, ok := ret.Get(0).(func(context.Context, *api.GetSubscriptionRequest) *api.Subscription); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.GetSubscriptionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTopic provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) GetTopic(_a0 context.Context, _a1 *api.GetTopicRequest) (*api.Topic, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Topic
	if rf, ok := ret.Get(0).(func(context.Context, *api.GetTopicRequest) *api.Topic); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Topic)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.GetTopicRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDeliveries provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) ListDeliveries(_a0 context.Context, _a1 *api.ListDeliveriesRequest) (*api.ListDeliveriesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.ListDeliveriesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *api.ListDeliveriesRequest) *api.ListDeliveriesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ListDeliveriesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.ListDeliveriesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDeliveryAttempts provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) ListDeliveryAttempts(_a0 context.Context, _a1 *api.ListDeliveryAttemptsRequest) (*api.ListDeliveryAttemptsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.ListDeliveryAttemptsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *api.ListDeliveryAttemptsRequest) *api.ListDeliveryAttemptsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ListDeliveryAttemptsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.ListDeliveryAttemptsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListMessages provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) ListMessages(_a0 context.Context, _a1 *api.ListMessagesRequest) (*api.ListMessagesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.ListMessagesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *api.ListMessagesRequest) *api.ListMessagesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ListMessagesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.ListMessagesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListSubscriptions provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) ListSubscriptions(_a0 context.Context, _a1 *api.ListSubscriptionsRequest) (*api.ListSubscriptionsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.ListSubscriptionsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *api.ListSubscriptionsRequest) *api.ListSubscriptionsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ListSubscriptionsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.ListSubscriptionsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTopics provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) ListTopics(_a0 context.Context, _a1 *api.ListTopicsRequest) (*api.ListTopicsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.ListTopicsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *api.ListTopicsRequest) *api.ListTopicsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ListTopicsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.ListTopicsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateSubscription provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) UpdateSubscription(_a0 context.Context, _a1 *api.UpdateSubscriptionRequest) (*api.Subscription, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Subscription
	if rf, ok := ret.Get(0).(func(context.Context, *api.UpdateSubscriptionRequest) *api.Subscription); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.UpdateSubscriptionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTopic provides a mock function with given fields: _a0, _a1
func (_m *HammerServer) UpdateTopic(_a0 context.Context, _a1 *api.UpdateTopicRequest) (*api.Topic, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *api.Topic
	if rf, ok := ret.Get(0).(func(context.Context, *api.UpdateTopicRequest) *api.Topic); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Topic)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.UpdateTopicRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
